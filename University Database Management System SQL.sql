--create Table Scholarship
CREATE TABLE Scholarship (
    ScholarshipId NUMBER PRIMARY KEY
    -- Add other relevant columns
);

-- Create FinancialAid table
CREATE TABLE FinancialAid (
    FID NUMBER PRIMARY KEY,
    DueBills NUMBER,
    PaidFeeLetters VARCHAR2(100),
    TaxInfo VARCHAR2(100),
    Semester VARCHAR2(20),
    ScholarshipId NUMBER,
    CONSTRAINT fk_finaid_scholarship FOREIGN KEY (ScholarshipId) REFERENCES Scholarship(ScholarshipId)
);

-- Create Advisor table
CREATE TABLE Advisor (
    AdvisorID NUMBER PRIMARY KEY,
    AdvisorName VARCHAR2(100),
    Contact VARCHAR2(20)
);

-- Create Student table
CREATE TABLE Student (
    StudentID NUMBER PRIMARY KEY,
    FirstName VARCHAR2(50) NOT NULL,
    LastName VARCHAR2(50) NOT NULL,
    Section VARCHAR2(10),
    Contact1 VARCHAR2(20),
    Contact2 VARCHAR2(20),
    Parent_No VARCHAR2(20),
    StreetNo VARCHAR2(10),
    City VARCHAR2(50),
    State VARCHAR2(50),
    Zipcode VARCHAR2(10),
    Department VARCHAR2(50),
    Email VARCHAR2(50),
    FID NUMBER,
    AdvisorID NUMBER,
    CONSTRAINT fk_student_fid FOREIGN KEY (FID) REFERENCES FinancialAid(FID),
    CONSTRAINT fk_student_advisor FOREIGN KEY (AdvisorID) REFERENCES Advisor(AdvisorID)
);

-- Create Internship table
CREATE TABLE Internship (
    InternID NUMBER PRIMARY KEY,
    StartDate DATE,
    EndDate DATE,
    Title VARCHAR2(100),
    Description VARCHAR2(500)
);

-- Create StudentOrganization table
CREATE TABLE StudentOrganization (
    OrganizationID NUMBER PRIMARY KEY,
    OrganizationName VARCHAR2(100)
);

-- Create Events table
CREATE TABLE Events (
    EventID NUMBER PRIMARY KEY,
    EventName VARCHAR2(100),
    Location VARCHAR2(100),
    EventDescription VARCHAR2(500),
    StartDate DATE,
    EndDate DATE,
    Time VARCHAR2(20),
    OrganizationID NUMBER,
    StudentID NUMBER,
    CONSTRAINT fk_events_org FOREIGN KEY (OrganizationID) REFERENCES StudentOrganization(OrganizationID),
    CONSTRAINT fk_events_student FOREIGN KEY (StudentID) REFERENCES Student(StudentID)
);

-- Create AcademicRecords table
CREATE TABLE AcademicRecords (
    AcademicRecordsNo NUMBER PRIMARY KEY,
    StudentStartDate DATE,
    StudentEndDate DATE,
    YearOfPassout NUMBER,
    Grade VARCHAR2(10),
    Transcripts VARCHAR2(100),
    Blacklogs VARCHAR2(100),
    StudentID NUMBER,
    CONSTRAINT fk_academic_student FOREIGN KEY (StudentID) REFERENCES Student(StudentID)
);

-- Create Department table
CREATE TABLE Department (
    DepartmentID NUMBER PRIMARY KEY,
    DepartmentName VARCHAR2(100),
    Location VARCHAR2(100)
);

-- Create Faculty table
CREATE TABLE Faculty (
    FacultyID NUMBER PRIMARY KEY,
    Name VARCHAR2(100),
    DepartmentID NUMBER,
    CONSTRAINT fk_faculty_dept FOREIGN KEY (DepartmentID) REFERENCES Department(DepartmentID)
);

-- Create Courses table
CREATE TABLE Courses (
    CourseID NUMBER PRIMARY KEY,
    CourseName VARCHAR2(100),
    CreditHours NUMBER,
    DepartmentID NUMBER,
    FID NUMBER,
    CONSTRAINT fk_courses_dept FOREIGN KEY (DepartmentID) REFERENCES Department(DepartmentID),
    CONSTRAINT fk_courses_finaid FOREIGN KEY (FID) REFERENCES FinancialAid(FID)
);

-- Create EnrollmentOffice table
CREATE TABLE EnrollmentOffice (
    EnrollmentID NUMBER PRIMARY KEY,
    Semester VARCHAR2(20),
    Year NUMBER,
    StudentID NUMBER,
    CourseID NUMBER,
    CONSTRAINT fk_enrollment_student FOREIGN KEY (StudentID) REFERENCES Student(StudentID),
    CONSTRAINT fk_enrollment_courses FOREIGN KEY (CourseID) REFERENCES Courses(CourseID)
);

-- Create Alumni table
CREATE TABLE Alumni (
    AluminiID NUMBER PRIMARY KEY,
    GraduationYear NUMBER,
    EmploymentStatus VARCHAR2(20),
    DegreesObtained VARCHAR2(100),
    StudentID NUMBER,
    CONSTRAINT fk_alumni_student FOREIGN KEY (StudentID) REFERENCES Student(StudentID)
);

-- Create Company table
CREATE TABLE Company (
    AluminiID NUMBER PRIMARY KEY,
    CompanyName VARCHAR2(100),
    Designation VARCHAR2(50),
    StreetNo VARCHAR2(10),
    City VARCHAR2(50),
    State VARCHAR2(50),
    Country VARCHAR2(50),
    Zip VARCHAR2(10),
    CONSTRAINT fk_company_alumni FOREIGN KEY (AluminiID) REFERENCES Alumni(AluminiID)
);

-- Higher Studies Table
CREATE TABLE Higher_Studies (
    AluminiID NUMBER PRIMARY KEY,
    Admission_year NUMBER,
    University VARCHAR2(100),
    Continent VARCHAR2(50),
    Degree VARCHAR2(50),
    FOREIGN KEY (AluminiID) REFERENCES Alumni(AluminiID)
);

-- Entrepreneur Table
CREATE TABLE Entrepreneur (
    AluminiID NUMBER PRIMARY KEY,
    Btype VARCHAR2(100),
    FOREIGN KEY (AluminiID) REFERENCES Alumni(AluminiID)
);

-- CSE Table
CREATE TABLE CSE (
    DepartmentID NUMBER PRIMARY KEY,
    Location VARCHAR2(100),
    Lab VARCHAR2(50),
    FOREIGN KEY (DepartmentID) REFERENCES Department(DepartmentID)
);


-- ECE Table
CREATE TABLE ECE (
    DepartmentID NUMBER PRIMARY KEY,
    Location VARCHAR2(100),
    FOREIGN KEY (DepartmentID) REFERENCES Department(DepartmentID)
);

-- Mech Table
CREATE TABLE Mech (
    DepartmentID NUMBER PRIMARY KEY,
    Location VARCHAR2(100),
    FOREIGN KEY (DepartmentID) REFERENCES Department(DepartmentID)
);

-- Electrical Table
CREATE TABLE Electrical (
    DepartmentID NUMBER PRIMARY KEY,
    Location VARCHAR2(100),
    FOREIGN KEY (DepartmentID) REFERENCES Department(DepartmentID)
);


--Data Insertation 
--SCHLARSHIP TABLE DATA
INSERT INTO SCHOLARSHIP VALUES (24896);
INSERT INTO SCHOLARSHIP VALUES (24897);
INSERT INTO SCHOLARSHIP VALUES (24898);
INSERT INTO SCHOLARSHIP VALUES (24899);
INSERT INTO SCHOLARSHIP VALUES (248100);
INSERT INTO SCHOLARSHIP VALUES (248101);
INSERT INTO SCHOLARSHIP VALUES (248102);
INSERT INTO SCHOLARSHIP VALUES (248103);
INSERT INTO SCHOLARSHIP VALUES (248104);
INSERT INTO SCHOLARSHIP VALUES (248105);

--FINANCIALAID TABLE DATA
INSERT INTO FINANCIALAID VALUES (121654, 6, 78457, '2.5%', 4, 24896);
INSERT INTO FINANCIALAID VALUES (121655, 2, 8724, '3%', 2, 24897);
INSERT INTO FINANCIALAID VALUES (84268, 1, 035798, '2.5%', 7, 24898);
INSERT INTO FINANCIALAID VALUES (84279, 0, 264957, '2.5%', 8, 24899);
INSERT INTO FINANCIALAID VALUES (9555689, 3, 92584, '5%', 5, 248100);
INSERT INTO FINANCIALAID VALUES (258478, 3, 96357, '1.2%', 1, 248101);
INSERT INTO FINANCIALAID VALUES (84378, 2, 054679, '3%', 6, 248102);
INSERT INTO FINANCIALAID VALUES (94778, 0, 14789, '1%', 3, 248103);
INSERT INTO FINANCIALAID VALUES (467885, 1, 369664, '7.1%', 7, 248104);
INSERT INTO FINANCIALAID VALUES (66536, 4, 3599, '4.6%', 1, 248105);

--ADVISOR TABLE DATA
INSERT INTO ADVISOR VALUES (153, 'KANG', 5735641234);
INSERT INTO ADVISOR VALUES (126, 'SAIRA', 5732126740);
INSERT INTO ADVISOR VALUES (193, 'NAIRA', 5739763521);
INSERT INTO ADVISOR VALUES (121, 'LILLI', 5732021264);
INSERT INTO ADVISOR VALUES (111, 'SEO', 5731621456);

--Student table data
INSERT INTO STUDENT VALUES (121, 'SASIDHAR', 'REDDY', 'A', 5735375678, 5732024567, 5731224567, '16THSTREET', 'ROLLA', 'MO', 65401, 'CSE', 'SVDFY@UMSYSTEM.EDU', 121654, 111);
INSERT INTO STUDENT VALUES (122, 'GAFARUDDIN', 'SHAIK', 'B', 5735378907, 5732128456, 5731486690, 'VIENNA', 'ROLLA', 'MO', 65401, 'ECE', 'GS9CB@UMSYSTEM.EDU', 121655, 111);
INSERT INTO STUDENT VALUES (123, 'MOKSHA', 'N', 'A', 5735372468, 5738553679, 5731258887, '13THSTREET', 'STLOUIS', 'MO', 65401, 'CSE', 'VNQRD@UMSYSTEM.EDU', 258478, 111);
INSERT INTO STUDENT VALUES (124, 'JHANSIMALA', 'SILLA', 'B', 5735371459, 5738559368, 5732128887, 'VICHY', 'STJAMES', 'MO', 67548, 'ECE', 'JS6P6@UMSYSTEM.EDU', 66536, 153);
INSERT INTO STUDENT VALUES (125, 'TANGA', 'AMULYA', 'C', 5735378458, 2064683790, 5731289588, 'WHITECOL', 'ROLLA', 'MO', 65401, 'MECH', 'ATGBV@UMSYSTEM.EDU', 94778, 153);
INSERT INTO STUDENT VALUES (126, 'SHALINI', 'K', 'C', 5732622468, 5738547679, 5739999999, '18THSTREET', 'STLOUIS', 'MO', 65651, 'ELECTRICAL', 'GASCB@UMSYSTEM.EDU', 467885, 126);
INSERT INTO STUDENT VALUES (127, 'KIRAN', 'S', 'B', 5735378979, 5737479679, 5799829307, '5THSTREET', 'TAMPA', 'FLORIDA', 65701, 'MECH', 'NPRAQ@GMAIL.COM', 84268, 121);
INSERT INTO STUDENT VALUES (128, 'PRIYANKA', 'TANJU', 'A', 5739980080, 5738799870, 5730981234, '13THSTREET', 'ROLLA', 'MO', 65401, 'ELECTRICAL', 'T.PRIYANKA@GMAIL.COM', 84378, 193);
INSERT INTO STUDENT VALUES (129, 'MOUNIKA', 'KYA', 'B', 5739279190, 5737578037, 5738927919, 'DAYTON', 'OHIO', 'MO', 92641, 'ECE', 'MONI@GMAIL.COM', 9555689, 193);
INSERT INTO STUDENT VALUES (130, 'PRAKESH', 'RODULA', 'C', 573456789, 5357566878, 5734657989, 'DIEENA', 'ROLLA', 'MO', 679802, 'MECH', 'PRAKESH@GMAIL.COM', 84279, 193);

--DUE TO SMALL ERROR I HAVE DELECTED THIS 129 ROW AND AGAIN INSERTRED WITHOUT ANY ERROR
DELETE FROM STUDENT
WHERE STUDENTID = 129;
INSERT INTO STUDENT VALUES (129, 'MOUNIKA', 'KYA', 'B', 5739279190, 5737578037, 5738927919, '8THSTREET', 'DAYTON', 'OHIO', 92641, 'ECE', 'MONI@GMAIL.COM', 9555689, 193);

SELECT * FROM STUDENT;

--INTERNSHIP TABLE DATA
INSERT INTO INTERNSHIP VALUES (516, TO_DATE('04/25/2020', 'MM/DD/YYYY'), TO_DATE('07/26/2020', 'MM/DD/YYYY'), 'DATA MANAGEMENT', 'DESIGNING ER DAIGRAM AND DEVELOPING SQL QUERY');
INSERT INTO INTERNSHIP VALUES (578, TO_DATE('09/26/2020', 'MM/DD/YYYY'), TO_DATE('01/14/2021', 'MM/DD/YYYY'), 'BUSINESS ANALYTICS', 'EXCEL SHEET DEVELOPMENT');
INSERT INTO INTERNSHIP VALUES (590, TO_DATE('01/19/2021', 'MM/DD/YYYY'), TO_DATE('04/08/2021', 'MM/DD/YYYY'), 'AI AND ML', 'INTRODUCTION TO ARTIFICAL INTELIGENCE AND MACHINE LEARNING CONCEPTS');
INSERT INTO INTERNSHIP VALUES (585, TO_DATE('07/18/2021', 'MM/DD/YYYY'), TO_DATE('12/26/2021', 'MM/DD/YYYY'), 'SAP ABAP', 'BASIC DATA INSERTION AND STORING DATA IN HANA DATABASE');
INSERT INTO INTERNSHIP VALUES (592, TO_DATE('11/07/2021', 'MM/DD/YYYY'), TO_DATE('03/18/2022', 'MM/DD/YYYY'), 'CLOUD COMPUTING', 'LEARN ABOUT COMPUTING SERVICES INCLUDING SERVERS, STORAGE, DATABASE, NETWORKING AND INTELLIGENCE');
INSERT INTO INTERNSHIP VALUES (596, TO_DATE('04/16/2022', 'MM/DD/YYYY'), TO_DATE('09/19/2020', 'MM/DD/YYYY'), 'ANDROID APP DEVELOPMENT', 'DEVELOPING A BASIC APP');


--STUDENT ORGANIZATION TABLE DATA
INSERT INTO STUDENTORGANIZATION VALUES (18, 'STUDENT WELL BEING');
INSERT INTO STUDENTORGANIZATION VALUES (98, 'ADVISOR RESOURCES');
INSERT INTO STUDENTORGANIZATION VALUES (56, 'STUDENT ACTIVITY FEE FUNDING');
INSERT INTO STUDENTORGANIZATION VALUES (54, 'Co-Curricular Transcripts');
INSERT INTO STUDENTORGANIZATION VALUES (67, 'Student Activity Fee Funding');
INSERT INTO STUDENTORGANIZATION VALUES (88, 'SILC Cubicle Policies');
INSERT INTO STUDENTORGANIZATION VALUES (89, 'Policies and Procedures');
INSERT INTO STUDENTORGANIZATION VALUES (05, 'Forms');

--EVENTS TABLE DATA
INSERT INTO EVENTS VALUES (01, 'WELL BEING', 'HAVENER CENTER', 'STUDENT WELL BEING ACTIVITES', TO_DATE('02/05/2022', 'MM/DD/YYYY'), TO_DATE('03/05/2022', 'MM/DD/YYYY'), '12:01 TO 3:00', 18, 121);
INSERT INTO EVENTS VALUES (02, 'SEXUAL ASSAULT', 'HAVENER CENTER AND INOVATION LAB', 'SEXUAL WELL BEING', TO_DATE('03/14/2022', 'MM/DD/YYYY'), TO_DATE('03/15/2022', 'MM/DD/YYYY'), '11:00 AM TO 1:00 PM', 18, 122);
INSERT INTO EVENTS VALUES (03, 'ADVISOR WEEK', 'IN DEPARTMENT', 'ADVISING HOLD REMOVEAL', TO_DATE('07/19/2020', 'MM/DD/YYYY'), TO_DATE('07/26/2020', 'MM/DD/YYYY'), '9:00 AM TO 4:00 PM', 98, 123);
INSERT INTO EVENTS VALUES (04, 'FUNDING', 'PARKER HALL', 'SCHOLARSHIP FUNDS', TO_DATE('07/09/2023', 'MM/DD/YYYY'), TO_DATE('07/09/2023', 'MM/DD/YYYY'), '9:00 AM TO 4:00 PM', 56, 124);
INSERT INTO EVENTS VALUES (05, 'DOCUMENTATION', 'HAVENER CENTER', 'WELL DOCUMENTATION', TO_DATE('11/22/2021', 'MM/DD/YYYY'), TO_DATE('11/23/2021', 'MM/DD/YYYY'), '12:01 TO 3:00', 54, 125);
INSERT INTO EVENTS VALUES (06, 'MENTOR', 'INOVATION LAB', 'ADVISING', TO_DATE('12/09/2020', 'MM/DD/YYYY'), TO_DATE('12/10/2020', 'MM/DD/YYYY'), '12:01 TO 2:00', 67, 126);
INSERT INTO EVENTS VALUES (07, 'DOG THERAPY', 'FITNESS CENTER', 'WELL BEING DOG', TO_DATE('03/10/2022', 'MM/DD/YYYY'), TO_DATE('03/12/2022', 'MM/DD/YYYY'), '1:01 TO 2:00', 88, 127);
INSERT INTO EVENTS VALUES (08, 'RESEARCH', 'TOMMEY HALL', 'PRESENTING INOVATIONS', TO_DATE('04/29/2019', 'MM/DD/YYYY'), TO_DATE('04/30/2019', 'MM/DD/YYYY'), '12:01 TO 1:00', 89, 128);
INSERT INTO EVENTS VALUES (09, 'SPRING DAY', 'NARWOOD HALL', 'SPREADING THE HAPPYNESS', TO_DATE('04/20/2019', 'MM/DD/YYYY'), TO_DATE('04/23/2019', 'MM/DD/YYYY'), '12:01 TO 2:00', 05, 129);
INSERT INTO EVENTS VALUES (10, 'GAMES', 'COMPUTER SCIENCE BLOCK', 'COME AND PLAY GAMES', TO_DATE('04/25/2021', 'MM/DD/YYYY'), TO_DATE('04/29/2021', 'MM/DD/YYYY'), '4:00 TO 8:00', 67, 130);

--ACADEMICRECORDS TABLE DATA
INSERT INTO ACADEMICRECORDS VALUES (101, TO_DATE('05/25/2018', 'MM/DD/YYYY'), TO_DATE('04/19/2022', 'MM/DD/YYYY'), 2022, 'A', 'ALL SEMESTERS', 'NILL', 121 );
INSERT INTO ACADEMICRECORDS VALUES (102, TO_DATE('05/25/2018', 'MM/DD/YYYY'), TO_DATE('04/19/2022', 'MM/DD/YYYY'), 2022, 'A', 'ALL SEMESTERS', 'NILL', 122 );
INSERT INTO ACADEMICRECORDS VALUES (103, TO_DATE('04/12/2017', 'MM/DD/YYYY'), TO_DATE('04/19/2021', 'MM/DD/YYYY'), 2021, 'B', 'ALL SEMESTERS', 'NILL', 123 );
INSERT INTO ACADEMICRECORDS VALUES (104, TO_DATE('05/15/2018', 'MM/DD/YYYY'), TO_DATE('05/15/2022', 'MM/DD/YYYY'), 2022, 'B', 'ALL SEMESTERS', 'NILL', 124 );
INSERT INTO ACADEMICRECORDS VALUES (105, TO_DATE('06/10/2016', 'MM/DD/YYYY'), TO_DATE('05/20/2020', 'MM/DD/YYYY'), 2020, 'A', 'ALL SEMESTERS', 'NILL', 125 );
INSERT INTO ACADEMICRECORDS VALUES (106, TO_DATE('04/28/2017', 'MM/DD/YYYY'), TO_DATE('04/19/2021', 'MM/DD/YYYY'), 2021, 'B', 'ALL SEMESTERS', 'NILL', 126 );
INSERT INTO ACADEMICRECORDS VALUES (107, TO_DATE('06/14/2018', 'MM/DD/YYYY'), TO_DATE('06/19/2022', 'MM/DD/YYYY'), 2022, 'A', 'ALL SEMESTERS', 'NILL', 127 );
INSERT INTO ACADEMICRECORDS VALUES (108, TO_DATE('04/05/2016', 'MM/DD/YYYY'), TO_DATE('04/19/2020', 'MM/DD/YYYY'), 2020, 'A', 'ALL SEMESTERS', 'NILL', 128 );
INSERT INTO ACADEMICRECORDS VALUES (109, TO_DATE('05/25/2016', 'MM/DD/YYYY'), TO_DATE('04/19/2020', 'MM/DD/YYYY'), 2020, 'B', 'ALL SEMESTERS', 'NILL', 129 );
INSERT INTO ACADEMICRECORDS VALUES (110, TO_DATE('05/25/2018', 'MM/DD/YYYY'), TO_DATE('04/19/2022', 'MM/DD/YYYY'), 2022, 'A', 'ALL SEMESTERS', 'NILL', 130 );


--DEPARTMENT TABLE DATA
INSERT INTO DEPARTMENT VALUES (501, 'CSE', '13TH STREET');
INSERT INTO DEPARTMENT VALUES (502, 'ECE', '14TH STREET');
INSERT INTO DEPARTMENT VALUES (503, 'MECH', '15TH STREET');
INSERT INTO DEPARTMENT VALUES (504, 'ELECTRICAL', '16TH STREET');


--FACULTY TABLE DATA
INSERT INTO FACULTY VALUES (11, 'KANG SEONJUN', 501);
INSERT INTO FACULTY VALUES (12, 'LEA BHI-RU', 501);
INSERT INTO FACULTY VALUES (13, 'YU-HSIEN', 501);
INSERT INTO FACULTY VALUES (14, 'WANG DAWEI', 502);
INSERT INTO FACULTY VALUES (15, 'SCHOLL DAVID', 502);
INSERT INTO FACULTY VALUES (16, 'HELTON-GEORGE TRICIA', 503);
INSERT INTO FACULTY VALUES (17, 'TIM FALEY', 503);
INSERT INTO FACULTY VALUES (18, 'SHARON', 503);
INSERT INTO FACULTY VALUES (19, 'MADELINE', 504);
INSERT INTO FACULTY VALUES (20, 'LEA', 504);

--COURSES TABLE DATA 
INSERT INTO COURSES VALUES (5453, 'DATA MANAGEMENT', 45, 501, 121654);
INSERT INTO COURSES VALUES (5454, 'BUSINESS ANALYTICS', 45, 501, 121655);
INSERT INTO COURSES VALUES (5455, 'INFO VISUALIZATION', 45, 501, 84268);
INSERT INTO COURSES VALUES (5456, 'ARITIFICAL INTELLIGENCE', 40, 502, 84279 );
INSERT INTO COURSES VALUES (5457, 'ROBOTICS', 50, 502, 9555689);
INSERT INTO COURSES VALUES (5458, 'MACHINE LEARNING', 45, 503, 258478);
INSERT INTO COURSES VALUES (5459, 'ERP', 40, 503, 84378);
INSERT INTO COURSES VALUES (5460, 'ERP SAP', 48, 503, 94778);
INSERT INTO COURSES VALUES (5400, 'ERP ABAP', 42, 504, 467885);
INSERT INTO COURSES VALUES (6400, 'BIO SCIENCE', 53, 504, 66536);

--ENROLLMENTOFFICE TABLE DATA
INSERT INTO ENROLLMENTOFFICE VALUES (01, '4TH', 2020, 121, 5453);
INSERT INTO ENROLLMENTOFFICE VALUES (02, '4TH', 2020, 122, 5454);
INSERT INTO ENROLLMENTOFFICE VALUES (03, '6TH', 2020, 123, 5455);
INSERT INTO ENROLLMENTOFFICE VALUES (04, '4TH', 2020, 124, 5456);
INSERT INTO ENROLLMENTOFFICE VALUES (05, '8TH', 2020, 125, 5457);
INSERT INTO ENROLLMENTOFFICE VALUES (06, '6TH', 2020, 126, 5458);
INSERT INTO ENROLLMENTOFFICE VALUES (07, '4TH', 2020, 127, 5459);
INSERT INTO ENROLLMENTOFFICE VALUES (08, '8TH', 2020, 128, 5460);
INSERT INTO ENROLLMENTOFFICE VALUES (09, '8TH', 2020, 129, 5400);
INSERT INTO ENROLLMENTOFFICE VALUES (10, '6TH', 2020, 130, 6400);


--ALUMINI TABLE DATA
INSERT INTO ALUMNI VALUES (91, 2023, 'HIGHER STUDIES', 'YES', 121);
DELETE FROM ALUMNI
WHERE ALUMINIID = 91;

INSERT INTO ALUMNI VALUES (91, 2022, 'HIGHER STUDIES', 'YES', 121);
INSERT INTO ALUMNI VALUES (92, 2022, 'ENTREPRENEUR', 'YES', 122);
INSERT INTO ALUMNI VALUES (93, 2021, 'COMPANY', 'YES', 123);
INSERT INTO ALUMNI VALUES (94, 2022, 'HIGHER STUDIES', 'YES', 124);
INSERT INTO ALUMNI VALUES (95, 2020, 'COMPANY', 'YES', 125);
INSERT INTO ALUMNI VALUES (96, 2021, 'HIGHER STUDIES', 'YES', 126);
INSERT INTO ALUMNI VALUES (97, 2022, 'COMPANY', 'YES', 127);
INSERT INTO ALUMNI VALUES (98, 2020, 'COMPANY', 'YES', 128);
INSERT INTO ALUMNI VALUES (99, 2020, 'ENTREPRENEUR', 'YES', 129);
INSERT INTO ALUMNI VALUES (100, 2022, 'ENTREPRENEUR', 'YES', 130);


--COMPANT TABLE DATA
INSERT INTO COMPANY VALUES (93, 'AUTOMOBILES', 'ASSISTANT', 18/2, 'JEFFERSON CITY', 'MISSOURI', 'UNITED STATES OF AMERICA', 65039);
INSERT INTO COMPANY VALUES (95, 'TCS', 'SYSTEM ENGINEER', 18, 'AUSTIN', 'TEXAS', 'UNITED STATES OF AMERICA', 73301);
INSERT INTO COMPANY VALUES (97, 'TESLA', 'MANAGER', 2/1, 'LINCOLN NE', 'NEBRASKA', 'UNITED STATES OF AMERICA', 68336);
INSERT INTO COMPANY VALUES (98, 'BMW', 'SALES EXECUTIVE', 196, 'SANTA FE', 'NEW MEXICO', 'UNITED STATES OF AMERICA', 87501);

--HIGHER STUDIES TABLE DATA
INSERT INTO HIGHER_STUDIES VALUES (91, 2022, 'MISSOURI S&T', 'UNITED STATES', 'MASTERS');
INSERT INTO HIGHER_STUDIES VALUES (94, 2022, 'STLOUIS UNIVERSITY', 'UNITED STATES', 'MASTERS');
INSERT INTO HIGHER_STUDIES VALUES (96, 2021, 'MISSOURI UNIVERSITY', 'UNITED STATES', 'MASTERS');

--ENTREPRENEUR TABLE DATA
INSERT INTO ENTREPRENEUR VALUES (92, 'COTTON');
INSERT INTO ENTREPRENEUR VALUES (99, 'HOUSING');
INSERT INTO ENTREPRENEUR VALUES (100, 'FOOD');

--CSE TABLE DATA
INSERT INTO CSE VALUES (501, '13TH STREET', 'COMPUTER LAB');

--ECE TABLE DATA
INSERT INTO ECE VALUES (502, '14TH STREET');

--MECH TABLE DATA
INSERT INTO MECH VALUES (503, '15TH STREET');

--ELECTRICAL TABLE DATA
INSERT INTO ELECTRICAL VALUES (504, '16TH STREET');

--1. Statement using Projection arithmetic expressions
SELECT 
    s.StudentID, 
    s.FirstName || ' ' || s.LastName AS FullName,
    c.CreditHours * 3 AS TotalCreditHours,
    CASE
        WHEN a.Grade = 'A' THEN 'Excellent'
        WHEN a.Grade = 'B' THEN 'very Good'
        WHEN a.Grade = 'c' THEN 'Good'
        ELSE 'Average or Below'
    END AS GradeDescription
FROM 
    Student s
JOIN 
    AcademicRecords a ON s.StudentID = a.StudentID
JOIN 
    Courses c ON s.FID = c.FID;


--2. Statement Using Alias
SELECT 
    s.FirstName || ' ' || s.LastName AS FullName,
    s.Email AS EmailAddress
FROM 
    Student s;

--3. Statement Using Concatenation
SELECT 
    'Student Name: ' || FirstName || ' ' || LastName AS FullName, 
    'Contact: ' || Contact1 AS Contact
FROM 
    Student;

--4. Statement Using The WHERE Clause
SELECT StudentId, Firstname, department FROM Student
WHERE Department = 'CSE';

--using join and where
SELECT Student.FirstName, Student.LastName, FinancialAid.DueBills
FROM Student
JOIN FinancialAid ON Student.FID = FinancialAid.FID
WHERE FinancialAid.DueBills > 2;

-- Retrieve all students who graduated in the year 2022
SELECT * FROM Student
WHERE StudentID IN (
    SELECT StudentID
    FROM AcademicRecords
    WHERE YearOfPassout = 2022
);

--5. Statement Using Comparison Operations (Greater than…)
SELECT * FROM FinancialAid 
WHERE DueBills > 2;

--using join
SELECT Student.FirstName, Student.LastName, EnrollmentOffice.Semester
FROM Student
JOIN EnrollmentOffice ON Student.StudentID = EnrollmentOffice.StudentID
WHERE EnrollmentOffice.Semester > '4TH';

--6. Statement using Logical Operators (AND|OR)
--Using AND
SELECT  StudentId, FirstName, Lastname, Department FROM Student 
WHERE Department = 'CSE' AND AdvisorID = 111;

--Using OR
SELECT StudentID, FirstName, Lastname, Department FROM Student 
WHERE Department = 'ECE' OR Department = 'MECH';

--Using both AND and OR
SELECT Studentid, department, Firstname FROM Student 
WHERE (Department = 'CSE' AND AdvisorID = 111) 
   OR (Department = 'ECE' AND AdvisorID = 122);


--7. Statement Using Date Functions
SELECT * FROM Events
WHERE StartDate >= DATE '2023-01-01' AND EndDate <= DATE '2023-12-31';

-- Retrieve all events that occurred after January 1, 2022
SELECT * FROM Events
WHERE StartDate > TO_DATE('01/01/2022', 'MM/DD/YYYY');

-- Retrieve all interns who started their internship after June 1, 2021
SELECT * FROM Internship
WHERE StartDate > TO_DATE('06/01/2021', 'MM/DD/YYYY');


--8. Statement using IN & Subquery
SELECT StudentID, FirstName, LastName, department
FROM Student
WHERE StudentID IN (
    SELECT eo.StudentID
    FROM EnrollmentOffice eo, Courses c, Department d
    WHERE eo.CourseID = c.CourseID
    AND c.DepartmentID = d.DepartmentID
    AND d.DepartmentName = 'CSE'
);

--using In, Subquery and join
SELECT Student.FirstName, Student.LastName, FinancialAid.DueBills
FROM Student
JOIN FinancialAid ON Student.FID = FinancialAid.FID
WHERE FinancialAid.FID IN (
    SELECT FID
    FROM FinancialAid
    WHERE DueBills < 3
);

--9. Statement using Like OPERATOR
SELECT * FROM Events 
WHERE EventName LIKE '%WELL%';

--10. Statement using AGGREGATION FUNCTIONS & GROUP BY
SELECT Department.DepartmentName, AVG(Courses.CreditHours) AS Avg_CreditHours
FROM Department
JOIN Courses ON Department.DepartmentID = Courses.DepartmentID
GROUP BY Department.DepartmentName;

--11. Statement using GROUP BY & HAVING
SELECT Department.DepartmentName, AVG(Courses.CreditHours) AS Avg_CreditHours
FROM Department
JOIN Courses ON Department.DepartmentID = Courses.DepartmentID
GROUP BY Department.DepartmentName
HAVING AVG(Courses.CreditHours) > 45;

--12. Statement Using Conditional Expressions
SELECT * FROM Higher_Studies
WHERE Continent = 'UNITED STATES';

--conditional expressions using the data from the Entrepreneur table.
SELECT * FROM Entrepreneur
WHERE Btype = 'HOUSING';

--using join
SELECT A.AluminiID, A.GraduationYear, A.EmploymentStatus, A.DegreesObtained, A.StudentID
FROM Alumni A
JOIN Higher_Studies HS ON A.AluminiID = HS.AluminiID
WHERE HS.Continent = 'UNITED STATES';

--13. Statement Using ‘’Union” & another statement having the same results using any join 

--Using UNION:

SELECT AcademicRecordsNo, StudentStartDate, StudentEndDate, YearOfPassout, Grade, Transcripts, Blacklogs, StudentID
FROM AcademicRecords
WHERE Grade = 'A'
UNION
SELECT AcademicRecordsNo, StudentStartDate, StudentEndDate, YearOfPassout, Grade, Transcripts, Blacklogs, StudentID
FROM AcademicRecords
WHERE YearOfPassout >= 2020;

--Using JOIN:

SELECT AR.AcademicRecordsNo, AR.StudentStartDate, AR.StudentEndDate, AR.YearOfPassout, AR.Grade, AR.Transcripts, AR.Blacklogs, AR.StudentID
FROM AcademicRecords AR
INNER JOIN Student S ON AR.StudentID = S.StudentID
WHERE AR. Grade = 'A' OR AR.YearOfPassout >= 2020;

--14. Statement Using ‘’Minus” & another statement having the same results using any join 
--Using MINUS:
SELECT s.StudentID, s.FirstName, s.LastName, c.CourseName AS Course, d.DepartmentName AS Department
FROM Student s
JOIN EnrollmentOffice eo ON s.StudentID = eo.StudentID
JOIN Courses c ON eo.CourseID = c.CourseID
JOIN Department d ON c.DepartmentID = d.DepartmentID
WHERE d.DepartmentName = 'CSE'

MINUS

SELECT s.StudentID, s.FirstName, s.LastName, c.CourseName AS Course, d.DepartmentName AS Department
FROM Student s
JOIN EnrollmentOffice eo ON s.StudentID = eo.StudentID
JOIN Courses c ON eo.CourseID = c.CourseID
JOIN Department d ON c.DepartmentID = d.DepartmentID
WHERE d.DepartmentName != 'CSE';

--using join
SELECT s.StudentID, s.FirstName, s.LastName, c.CourseName AS Course, d.DepartmentName AS Department
FROM Student s
JOIN EnrollmentOffice eo ON s.StudentID = eo.StudentID
JOIN Courses c ON eo.CourseID = c.CourseID
JOIN Department d ON c.DepartmentID = d.DepartmentID
WHERE d.DepartmentName = 'CSE';

--15. Statement Using ‘’INTERSECT” & another statement having the same results using any join 
--Using INTERSECT:

SELECT AluminiID AS StudentID
FROM Alumni
INTERSECT
SELECT AluminiID AS StudentID
FROM Higher_Studies;

-- Using JOIN
SELECT DISTINCT a.AluminiID AS StudentID
FROM Alumni a
JOIN Higher_Studies hs ON a.AluminiID = hs.AluminiID;




